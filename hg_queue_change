#!/bin/bash

# Get all queues and filter out current active one.
QUEUES=`hg qqueue  | sed '/[^(]*([^)]*)/d'`
QUEUEARRAY=($QUEUES)

# Enumerate and display queue name on stdout
function queueEnumerate()
{
  local i=0
  for j in "${QUEUEARRAY[@]}"
  do
    echo -n "${i}. "
    echo $j
    ((i+=1)) # or "let i+=1"
  done
}

queueEnumerate

# Choice the queue you want to active.
echo -n "Select the queue you want to active: [1~"; echo "${#QUEUEARRAY[@]}] "
read SELECTED_QUEUE

# Validate input value
if [ `echo ${SELECTED_QUEUE} | sed 's/^[-+0-9][0-9]*//' | wc -c` -ne 1 ]; then
  echo "Is not a valid number!!"
  exit 0
elif [ ${SELECTED_QUEUE} -lt "0" ] || [ ${SELECTED_QUEUE} -gt ${#QUEUEARRAY[@]} ]; then
  echo "Is not a valid range!!"
  exit 0
fi

# Step 1: popup the current active one.
echo "Pop up all patch..."
hg qpop -a
# Pop fail. User's call.
if [ $? -ne 0 ]; then
  echo "Patch rotten. Refresh/Force pop up/Abort?[R/F/A]"
  read ROTTEN_DECISION

  echo -n "${ROTTEN_DECISION}" > sed 's/.*/\L&/' > ROTTEN_DECISION # lower casting.
  if [ ${ROTTEN_DECISION:="a"} == "r" ]; then
    hg qrefresh
    hg qpop -a
  elif [ ${ROTTEN_DECISION} == "f" ]; then
    hg qpop -a -f
  else
    echo "Abort..."
    exit $?
  fi
fi

# Step 2: active the selected queue.
hg qqueue ${QUEUEARRAY[SELECTED_QUEUE]}

# Step 3: pull & update
echo -n "hg pull -u before patch push?[y/n] "
read HGPULLUPDATE
echo -n "${HGPULLUPDATE}" > sed 's/.*/\L&/' > HGPULLUPDATE # lower casting.
if [ ${HGPULLUPDATE:="n"} == "y" ]; then
  hg pull -u
fi

# Step 4: push all patches.
hg qpush -a

echo "Done..."
