#!/bin/bash

# Get all queues and filter out current active one.
QUEUES=`hg qqueue  | sed '/[^(]*([^)]*)/d'`
QUEUEARRAY=($QUEUES)

#IFS=$'\n' read -d '' -r -a QUEUEARRAY < queues.tmp

i=0
for j in "${QUEUEARRAY[@]}"
do
  echo -n "${i}. "
  echo $j
  let i+=1
done

echo -n "Select the queue you want to active: [1~"; echo "${#QUEUEARRAY[@]}] "
read selection

# Validate input value
if [ `echo ${selection} | sed 's/^[-+0-9][0-9]*//' | wc -c` -ne 1 ]; then
  echo "Is not a valid number!!"
  exit 0
elif [ ${selection} -lt "0" ] || [ ${selection} -gt ${#QUEUEARRAY[@]} ]; then
  echo "Is not a valid range!!"
  exit 0
fi

echo "Pop up all patch..."
# Start to operate hg!
hg qpop -a
if [ $? -ne 0 ]; then
  echo "Refresh/Force pop up/Abort?[R/F/A]"
  read decision

  if [ ${decision} == "R" ] || [ ${decision} == "r" ]; then
    hg qrefresh
    hg qpop -a
  elif [ ${decision} == "F" ] || [ ${decision} == "f" ]; then
    hg qpop -a -f
  else
    exit $?
  fi
fi

hg qqueue ${QUEUEARRAY[selection]}

echo -n "hg pull -u before patch push?[y/n] "
read pullData
echo -n "${pullData}" > sed 's/.*/\L&/' > pullData
if [ ${pullData} == "y" ]; then
  hg pull -u
fi

# Push all queues.
hg qpush -a

echo "Done..."
